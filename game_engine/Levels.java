package game_engine;

public class Levels
{
	//each 2D array is 15 rows and 20 columns
	//these arrays are used only for collision detection, with 1 being a solid object, 0 being air, 2 being an enemy, 3 being a JumpingEnemy, and 4 being a victory panel
	//they are also used to initialize the ArrayList with all the tiles
	//note: there is an extra column on the right side that is not drawn. This prevents the player from going out of bounds
	//and getting an ArrayIndexOutOfBounds error
	public static int[][] level1 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	public static int[][] level2 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	public static int[][] level3 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,3,1},
									{1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1}, //might be a problem with the 3 here...
									{1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1},
									{1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

	public static int[][] level4 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,0,0,0,5,5,5,0,0,0,1,1,1,1,1,1},	//make 5 an invisible panel (just don't add it to the ArrayList<Tile> called map). In fact, just leave the code as-is. It SHOULD work
									{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
									{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
									{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
									{1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1},
									{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
									{1,1,1,1,1,1,0,0,0,0,3,0,0,0,0,1,1,1,1,1,1},	//change the 3 to 2 if there is a problem with him jumping through tiles
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};


	public static int[][] level5 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
									{1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1}, //change 5 to 1 if it's too hard as-is
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},	//6 means boss part (1 tile wide, 10 tiles tall). Have him shoot bullets from a random body segment
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};	//if you kill a segment, it turns orange (but it keeps shooting). Once all 10 parts are killed, it dies.

	
	public static int[][] level6 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,3,1,1,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	
	public static int[][] level7 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,2,0,0,1,1},
									{1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,1},
									{1,0,1,0,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,1},
									{1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	
	public static int[][] level8 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,5,0,0,5,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
									{1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
									{1,0,0,0,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,0,1},
									{1,0,0,0,5,0,0,0,5,0,0,0,0,0,0,5,5,0,0,0,1},
									{1,0,0,0,5,0,0,0,5,0,0,0,0,2,0,5,5,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	
	public static int[][] level9 = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1},
									{1,1,0,0,6,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1},
									{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
									{1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	//since I alter each grid during the game (changing enemies to zeros to avoid problems with collision detection) I keep copies of the original grids, shown below
	
	
	public static final int[][] level1o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

public static final int[][] level2o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

public static final int[][] level3o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,3,1},
								{1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1}, //might be a problem with the 3 here...
								{1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1},
								{1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

public static final int[][] level4o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,1,1,1,1,1,0,0,0,5,5,5,0,0,0,1,1,1,1,1,1},	//make 5 an invisible panel (just don't add it to the ArrayList<Tile> called map). In fact, just leave the code as-is. It SHOULD work
								{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
								{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
								{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
								{1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1},
								{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
								{1,1,1,1,1,1,0,0,0,0,3,0,0,0,0,1,1,1,1,1,1},	//change the 3 to 2 if there is a problem with him jumping through tiles
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};


public static final int[][] level5o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
								{1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1}, //change 5 to 1 if it's too hard as-is
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,1},	//6 means boss part (1 tile wide, 10 tiles tall). Have him shoot bullets from a random body segment
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};	//if you kill a segment, it turns orange (but it keeps shooting). Once all 10 parts are killed, it dies.


public static final int[][] level6o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,0,0,3,1,1,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};


public static final int[][] level7o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,2,0,0,1,1},
								{1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,1},
								{1,0,1,0,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,1},
								{1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1},
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};


public static final int[][] level8o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,5,0,0,5,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
								{1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,5,5,0,0,5,1},
								{1,0,0,0,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,0,1},
								{1,0,0,0,5,0,0,0,5,0,0,0,0,0,0,5,5,0,0,0,1},
								{1,0,0,0,5,0,0,0,5,0,0,0,0,2,0,5,5,0,0,0,1},
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};


public static final int[][] level9o = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1},
								{1,1,0,0,6,0,0,0,0,0,0,0,0,0,0,6,0,0,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,1},
								{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
								{1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1},
								{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
								{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
	
	
	/*Empty Grid, for reference     {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
									{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};*/

	public static int[][] get(int x)
	{
		if(x == 1)
			return level1;
		else if(x == 2)
			return level2;
		else if (x == 3)
			return level3;
		else if (x == 4)
			return level4;
		else if(x == 5)
			return level5;
		else if (x == 6)
			return level6;
		else if (x == 7)
			return level7;
		else if (x == 8)
			return level8;
		else
			return level9;
	}
	
	public static void resetLevels()
	{
		for(int row = 0; row < level1o.length; row++)
		{
			for(int column = 0; column < level1o[0].length; column++)
			{
				level1[row][column] = level1o[row][column];
			}
		}
		for(int row = 0; row < level2o.length; row++)
		{
			for(int column = 0; column < level2o[0].length; column++)
			{
				level2[row][column] = level2o[row][column];
			}
		}
		for(int row = 0; row < level3o.length; row++)
		{
			for(int column = 0; column < level3o[0].length; column++)
			{
				level3[row][column] = level3o[row][column];
			}
		}
		for(int row = 0; row < level4o.length; row++)
		{
			for(int column = 0; column < level4o[0].length; column++)
			{
				level4[row][column] = level4o[row][column];
			}
		}
		for(int row = 0; row < level5o.length; row++)
		{
			for(int column = 0; column < level5o[0].length; column++)
			{
				level5[row][column] = level5o[row][column];
			}
		}
		for(int row = 0; row < level6o.length; row++)
		{
			for(int column = 0; column < level6o[0].length; column++)
			{
				level6[row][column] = level6o[row][column];
			}
		}
		for(int row = 0; row < level7o.length; row++)
		{
			for(int column = 0; column < level7o[0].length; column++)
			{
				level7[row][column] = level7o[row][column];
			}
		}
		for(int row = 0; row < level8o.length; row++)
		{
			for(int column = 0; column < level8o[0].length; column++)
			{
				level8[row][column] = level8o[row][column];
			}
		}
		for(int row = 0; row < level9o.length; row++)
		{
			for(int column = 0; column < level9o[0].length; column++)
			{
				level9[row][column] = level9o[row][column];
			}
		}
	}
}